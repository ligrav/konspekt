15 урок 
Таблица значений - универсальная коллекция значений

Таблица значений может существовать только в толстом клиенте

Переводим нашу конфигурацию в толстый клиент

Сервис - Параметры - Запуск1С предприятие - толстый клиент(управляемое приложение)

// Код создания ТаблицыЗначений 
// Создаем таблицу значений
ДанныеСотрудников = Новый ТаблицаЗначений;
// Сначала требуется таблице дать колонки
Колонки = ДанныеСотрудников.Колонки;
Колонки.Добавить("ФИО");
Колонки.Добавить("Оклад");
Колонки.Добавить("Должность");
Колонки.Добавить("Отдел");
// смотрим количество колонок
Сообщить("Количество колонок = " + Колонки.Количество());
// Заполняем колонки
СтрокаТЗ = ДанныеСотрудников.Добавить();
СтрокаТЗ.ФИО = "Иванов";
СтрокаТЗ.Оклад = 5000;
СтрокаТЗ.Должность = "Руководитель";
СтрокаТЗ.Отдел = "Разработка";

СтрокаТЗ = ДанныеСотрудников.Добавить();
СтрокаТЗ.ФИО = "Петров";
СтрокаТЗ.Оклад = 4000;
СтрокаТЗ.Должность = "Кладовщик";
СтрокаТЗ.Отдел = "Склад";

Сообщить("Количество данных в таблицк = " + ДанныеСотрудников.Количество());

// что бы увидеть данные в таблице, используем цикл
Для каждого СтрокаТаблицы Из ДанныеСотрудников Цикл
	Сообщить("ФИО - " + СтрокаТаблицы.ФИО);
	Сообщить("Оклад - " + СтрокаТаблицы.Оклад);
	Сообщить("Должность - " + СтрокаТаблицы.Должность);
	Сообщить("Отдел - " + СтрокаТаблицы.Отдел);
КонецЦикла;

16 урок
Самостоятельная
Есть таблица на картинке, создать на ее основе  Таблицу значений

ДанныеТоваров = Новый ТаблицаЗначений;
Колонки = ДанныеТоваров.Колонки;
Колонки.Добавить("Товар");
Колонки.Добавить("Цена");
Колонки.Добавить("Количество");
Колонки.Добавить("Сумма");

СтрокаТЗ = ДанныеТоваров.Добавить();
СтрокаТЗ.Товар = "Творог";
СтрокаТЗ.Цена = 50;
СтрокаТЗ.Количество = 3;
СтрокаТЗ.Сумма = СтрокаТЗ.Цена * СтрокаТЗ.Количество;

СтрокаТЗ = ДанныеТоваров.Добавить();
СтрокаТЗ.Товар = "Молоко";
СтрокаТЗ.Цена = 65;
СтрокаТЗ.Количество = 2;
СтрокаТЗ.Сумма = СтрокаТЗ.Цена * СтрокаТЗ.Количество; // можно сумму занести в цикл

СтрокаТЗ = ДанныеТоваров.Добавить();
СтрокаТЗ.Товар = "Кефир";
СтрокаТЗ.Цена = 45;
СтрокаТЗ.Количество = 4;
СтрокаТЗ.Сумма = СтрокаТЗ.Цена * СтрокаТЗ.Количество;


ИтоговаяСумма = 0;
Для каждого Товары Из ДанныеТоваров Цикл
	Сообщить("Товар - " + СтрокаТЗ.Товар);
	Сообщить("Цена - " + СтрокаТЗ.Цена);
	Сообщить("Количество - " + СтрокаТЗ.Количество);
	Сообщить("Сумма - " + СтрокаТЗ.Сумма);
	ИтоговаяСумма = ИтоговаяСумма + СтрокаТЗ.Сумма;
КонецЦикла;

Сообщить("Итог к оплате" + ИтоговаяСумма);
// Он сделал только цикл по другому
// ТекущийТовар = СтрокаТовара.Товар;
// ТекущаяСумма = СтрокаТовара.Цена * СтрокаТовара.Количество;
// СтрокаВывода = СтрШаблон("Товар - %1. Сумма = %2", ТекущийТовар, ТекущаяСумма);
// ИтоговаяСумма = ИтоговаяСумма + ТекущаяСумма;
// Сообщить(Строкавывода);
//КОнец Цикла
// Сообщить("Итого к оплате = " + ИтоговаяСумма);


Урок 17 

Глобальный контекст он рассказывает о нем

Обработчик события - это заранее записаный алгоритм

Открываем свойство конфигурация: Модуль приложения


Процедура ПередНачаломРаботыСистемы(Отказ)
	Предупреждение( "Привет" );     // программа не запустилась, но уже поздоровалась
КонецПроцедуры


Процедура ПриНачалеРаботыСистемы()
	Предупреждение( "Зравствуй");    // приветвует после запуска приложения
КонецПроцедуры

// этот год уже не работает какнадо из за обновления платформы
Процедура ПередЗавершениемРаботыСистемы(Отказ)
	   Отказ = Истина;
	   ТекстПредупреждения = "Уходите?";
КонецПроцедуры

Учит коментировать код

(11, 16) ошибка ожидается символ ;  
11, 16 это координаты ошибки, можно посмотреть снизу и соорентироваться на какой мы строке 

Общие команды
Делаем команду - ПокажиВремя - Группа - Панель навигации.Важное
 
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)     
//Знакомимся с функцией формат
	СтрокаВывода = "Сейчас времени = " + Формат(ТекущаяДата(), "ДФ=ЧЧ:мм:сс"); // нажимаем правой кнопкой мыши и выбираем конструктор форматной строки
	Сообщить(СтрокаВывода);
КонецПроцедуры

// Общие формы
Делаем новую общую форму и нажимаем на галочку Использовать стандартные команды
Добавляем поле Название товара 
Добавляем новый реквизит
НазваниеТовара тип строка
Связываем поле и реквизит с помощью кнопки ПутьКДанным
и теперь наш реквизит отображается
Переключаемся на модуль формы и пишем свой Обработчик событий

&НаКлиенте
Процедура НашОбработчик( НашЭлемент )
	Сообщить( "Изменение товара - " + НазваниеТовара);
КонецПроцедуры

Добавляю в Поле Событие при изменение 

17 урок
Задача
Дано
	Окно формы с двумя полями с типами строка и число
	Пользователь в первое вводит перечисление товаров 
	через запятую("Товар1,Товар2,Товар3")

	Посчитать количество элементов в массиве и вывести данную информацию в поле формы

Решение
	Добваляем общую форму ЗадачиПоОбработчикамСобытий_1
	ставим галочку
	Можно левой кнопкой мыши перенести реквизит на поле и автоматически создается связь
	Создаем реквизиты
	СписокТоваров
	КоличествоТоваров 
	оба перетаскиваем на поле 
	Список товаров - ПриИзменение На клиенте

		&НаКлиенте
		Процедура СписокТоваровПриИзменении(Элемент)
			МассивТоваров = СтрРазделить(СписокТоваров, ",", Ложь);
			КоличествоТоваров = МассивТоваров.Количество();
		КонецПроцедуры
Готово

19 урок

Задача 
	Окно формы с тремя полями(тип:число)
	Необходимо использовать механизм "Общие формы"

Требуется:
	Поля должны называться "Цена,Количество,Сумма", соотвественно.
	При изменении данных в первых двух полях должна изменятся информация в поле "Сумма".

Решение
Решил просто, создал реквизиты и цена, количество при изменении и вот код

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	Сумма = Количество * Цена; 
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	Сумма = Количество * Цена; 
КонецПроцедуры

// Он решил по другому с помощью функции
// Пример аналогичного решения

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	Сумма = ПосчитатьСумму(Цена,Количество); 
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	Сумма = ПосчитатьСумму(Цена,Количество);
КонецПроцедуры

&НаКлиенте
Функция ПосчитатьСумму(ЦенаРасчета, КоличествоРасчета)    
	
	СуммаРасчета = КоличествоРасчета * ЦенаРасчета; 
	Возврат СуммаРасчета;
	
КонецФункции // ПосчитатьСумму()

####### Следующая Задача #######

Дано:
	Окно формы с тремя полями (тип: число, строка, дата)

	Необходимо использовать механизм "Общие формы"
Требуется:
	При редактировании каждого поля выводить сообщение
	("изменено поле с типом <тип поля>.
	Новое значение поля - "<Значение поля>"")
Решение: 
	
// все сделал сам
1.Добавляем три поля ПолеСтрока, ПолеЧисло, ПолеДата

&НаКлиенте
Функция СообщитьСтроку(НаименованиеСтроки)  // автор назвал ее ВывестиСообщение   
	СтрокаВывода = ("Изменено поле с типом " + ТипЗнч(НаименованиеСтроки) +
	" Новое значение поля - " + НаименованиеСтроки);
	Возврат СтрокаВывода;
		
КонецФункции // СообщитьСтроку()

&НаКлиенте
Процедура ЧислоПриИзменении(Элемент)
	Сообщить(СообщитьСтроку(ПолеЧисло));
КонецПроцедуры 


&НаКлиенте
Процедура СтрокаПриИзменении(Элемент)
	Сообщить(СообщитьСтроку(ПолеСтрока));
КонецПроцедуры


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	Сообщить(СообщитьСтроку(ПолеДата));
КонецПроцедуры


// В рамках этой задачи мы создаем кнопку
// Добавить кнопку, при нажатии которой нужно вывести сообщение 
// "Нажата кнопка" и вывести значение всех полей на форме

Форма - Команды - КомандыФорма + Добавить
Имя ПоказатьВсеПоля
Перетаскиваем кнопку на форму
Нажимаем на команду - Действие 
и пишем код 

&НаКлиенте
Процедура ПоказатьВсеПоля(Команда)   
	Сообщить( "Нажата кнопка" );      
	// используем символ переноса строки
	Сообщить(ПолеСтрока + Символы.ПС + ПолеЧисло + Символы.ПС + ПолеДата);
КонецПроцедуры

20 Урок

Следующая Задача
Дано 
	Внешний источник данных (текстовые документы), в котором хранятся данные
	о сотрудниках (Иванов, Продажи, 150,5)
Требуется
	Загрузить все данные в таблицу значений

Решение
Создаем общую форму ФормаЗагрузкиДанных и галочка
Так же эта галочка Использовать стандартные команды есть в свойствах формы

Создаем поля
ИмяКаталога - строка - кнопка открытие в положение да, Открытие - Создать на клиенте
&НаКлиенте
Поцедура ИмяКаталогаОткрытие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь; // что бы при выборе папки он не писал ничего лишнего

	Диалог = Новый ДиалогВыбораФайла( РежимДиалогаВыбораФайла.ВыборКаталога);
	//  Надо реагировать на то что выберет пользователь Выбрать или Отмена
	Если Диалог.Выбрать() Тогда
		ИмяКаталога = Диалог.Каталог;
	КонецЕсли
КонецПроцедуры

Надо разрешить синхронные вызовы
Свойство Конфигурации - Совместимость - Режим использования синзронны.... -  Использовать

Делаем файлик в блокноте с таблицей 
C:\Users\Мистер\Desktop\изучение python\konspekt\Внешняя обработка
файл находится в этой папке

СтрокаВнешнихДанных - строка - переносим на форму 
Вид - Поле текстового документа
Имя каталога будет использоваться для того что бы открыть файл с таблицей значений

Добавить кнопку загрузить внешние данные
Команды - Команды форм... Добавить -  ЗагрузитьДанныеИзФайлов 
Переносим кноку - Растягивать по горизонтали
Действие - создать на клиенте

&НаКлиенте
Процедура ЗагрузитьДанныеИзФайлов(Команда)
	Текст = Новый ТекстовыйДокумент;

	СтрокаВнешнихДанных = "";
	// НайтиФайлы - функция которая возвращает массив
	МассивФайлов = НайтиФайлы (ИмяКаталога, "*.txt",Ложь); // Искать в подкаталогах - Ложь
	Для каждого Файл из МассивФайлов Цикл // в цикле мы должны прочитать наш файл
		Текст.Прочитать(Файл.ПолноеИмя);
		СтрокаВнешнихДанных = СтрокаВнешнихДанных + Текст.ПолучитьТекст();
	КонецЦикла;
КонецПроцедуры

Теперь нам эти данные надо загрузить в таблицу значений 

Команды формы - добавить ЗагрузитьДанныеВТаблицу - переместить на форму, растянуть по ширине
Действие На клиенте

&НаКлиенте
Процедура ЗагрузитьДанныеВТаблицу(Команда)
	// ТаблицаДанных = Новый ТаблицаЗначений // не будет работать на клиенте
	ЗагрузитьДанныеВТаблицуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеВТаблицуНаСервере()
	СтруктураКолонок = Новый Структура("Фамилия, Задача, Ставка, ЧислоЧасов"); // Названия колонок
	СтруктураКолонок.Ставка = Новый ОписаниеТипов("Число"); // строку переводим в число
	СтруктураКолонок.ЧислоЧасов = Новый ОписаниеТипов("Число");
    
	ТаблицаДанных = Новый ТаблицаЗначений;

	Колонки = ТаблицаДанных.Колонки; // что бы добавить в таблицу значения колонки использцем цикл
	Для каждого ОписаниеКолонки из СтруктураКолонок Цикл
		Если ТипЗнч(ОписаниеКолонки.Значение) = Тип("ОписаниеТипов") Тогда        // Он не обьясняет что за описание типов
			Колонки.Добавить(ОписаниеКолонки.Ключ, ОписаниеКолонки.Значение);
		Иначе
			Колонки.Добавить(ОписаниеКолонки.Ключ); // СОздаем колонку без описания типизации
		КонецЕсли
	КонецЦикла;
    // Мы заполнили колонки таблица, теперь заполняем саму таблицу
	МассивСтрок = СтрРазделить( СтрокаВнешнихДанных, Символы.ПС); // Делим текст по строкам
	Для каждого СтрокаДанных Из МассивСтрок Цикл  
		// Сообщить(СтрокаДанных); если написать только эту команду в цикле, то он выведет строки нашего текста 
		МассивДанных = СтрРазделить (СтрокаДанных, ", ", Ложь); // Делим нашу строчку еще на один массив
		СтрокаТаблицы = ТаблицаДанных.Добавить(); // тут я потек и перестал понимать
		Для Индекс = 0 По МассивДанных.Количество()-1 Цикл // Тоже самое что и ВГраница, ее можно было тоже указать
			СтрокаТаблицы[Индекс] = МассивДанных[Индекс];
		КонецЦикла 
	КонецЦикла;
	Сообщить(ТаблицаДанных.Итог("Ставка"));
КонецПроцедуры

21 урок 
механизм отладки
Визуализация таблицы значений
Объектная модель работы с данными

Продолжение предыдущей задачи

Изучаем механизм отладки с ошибки, например если добваим дополнительные числа в Строку внешних данных
Появилась ошибка 
Отладка - Начать отладку и отслеживаем выполнение кода
возобновляем ошибку и появляется дополнительное окно в ошибке Подробно
Ставим точку остановы на нужной нам строке 
11 минута показывает на деле как работает Отладка
Пошаговово выполняет код и использует вычесление выражений
Показывает меню Остановка по ошибке 
Пытаемся 
этого избежать
 // 24 минута
Для Индекс = 0 По МассивДанных.Количество()-1 Цикл // Тоже самое что и ВГраница, ее можно было тоже указать
Попытка
	СтрокаТаблицы[Индекс] = МассивДанных[Индекс];   
Исключение
	СтрокаОшибки = СтрШаблон( "При загрузки строки(%1) произошла ошибка: %2",
							СтрокаДанных, ОписаниеОшибки());
	Сообщить(СтрокаОшибки);
КонецПопытки

Теперь ошибка будет не так пугать, программа будет выполнять расчеты и укажет на ошибку


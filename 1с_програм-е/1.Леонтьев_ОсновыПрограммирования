3 Урок 

Создаем пустую базу
Желтый файл в папке в базе данных является основным, если его переместить, то переместится база данных
Скачать полную версию 1с учебную 
Показывает демо версию конфигурацию деньги и где она находится
Что бы удалить базу данных с жесткого диска, то сначала необходимо удалить папку

4 урок
В свойствах конфигурации меняем Управляемое приложение на обычное
 Пишем свою программу
 	Внешняя обработка - создаем Обработка1 - открываем модуль объекта
 	Сообщить("Привет мир!")
 	Сохраняем обработку на рабочий стол и мы можем через конфигурацию открыть ее

 5 урок 
 	Разбираем формы
 	Открываем нашу обработку из предыдущего урока и очищаем 
 	Добавляем форму, мы работаем с обычным приложением,а форма создалась управляемое, надо менять
 	сервис - параметры - Управляемое и обычное приложение
 	Что бы удалить форму, надо очистить ее в Форме обработки

 	Рисуем на форме кнопку - КнопкаПриветМир - событие нажать - и нажимая на кнопку запускаем команду сообщить Привет мир
 	Создаем еще одну кнопку и для второй кнопки назначаем предыдущий обработчик
 	и теперь две кнопки ссылаются на один код 


 	!!! Правила хорошего тона 
 	Для отдельного элемента управления отдельный обработчик(Процедура)
 	Для каждой кнопки свой код

 6 урок 

 Создаем переменные  

 Перем Гл_Перем; // ее создаем в шапке модуля и она доступна в любой процедуре модуля

 Делаем задачу, при нажатие на одну кнопку переменная увеличивается
 при нажатие на другую, уменьшается, и что бы отслеживать процесс мы его сообщаем
 это я решать уже умею 

7 урок 

Изучаем локальные переменные 
Создаются уже в процедуре и в других процедурах ее уже не будет

8 урок 

Запись "Перем" избыточна и мы ее больше использовать не будем

9 урок
	Условные операторы <  >  = 
Создаем документ1 и даем ему два реквизита ЧислоА и ЧислоБ
Создаем на форме два  поле ввода и связываем каждый с реквизитом из документа
Подписываем поля воду с помощью надписи 
На кнопку выполнить создаем обработчик
Если ЧислоА > ЧислоБ Тогда
	Сообщить("ЧислоА больше");
ИначеЕсли ЧислоА < ЧислоБ Тогда
	Сообщить("ЧислоБ больше");
ИначеЕсли ЧислоА = ЧислоБ Тогда
	Сообщить("Числа  равны");
КонецЕсли;

10 урок Управляемые формы в 1С - знакомимся и создаем первую форму 
 Переименовал пустую базу в обычное приложение 
 Копируем эту базу в новую папку и переименовываем ее в управляемое приложение
 меняем в свойствах конфигурации с обычного на управляемое 
	Создаем новую обработку  Файл - новая обработка "ВнешняяОбработка1_Управляемая"
	Создаем реквизиты ЧислоА и ЧислоБ - Число
	Создаем форму - нажимаем далее и указываем реквизиты, которые будут заранее размещены
	Создает на форме папку группа (Добавить Группа - обычная группа) и в свойствах папки выставляет раставление по вертикали
	Создает команду выполнить и пишет кода на клиенте
А теперь сравним код обычного приложения и управляемого, выше обычное

&НаКлиенте
Процедура КомандаВыполнить(Команда)
	Если Объект.ЧислоА > Объект.ЧислоБ Тогда
		Сообщить("ЧислоА больше");
	ИначеЕсли Объект.ЧислоА < Объект.ЧислоБ Тогда
		Сообщить("ЧислоБ больше");   
	Иначе
		Сообщить("они равны");
		
	КонецЕсли;
КонецПроцедуры

11 урок 
Процедуры и функции в 1С чем они отличаются и как их использовать
Пример функции котрая ищет максимум

Функция Максимум1(А, Б)

	Если А > Б Тогда 
		Возврат А;
	Иначе 
		Возврат Б;
	КонецЕсли;

КонецФункции

Оптимизированный пример с тремя параментрами

Функция Максимум2(А, Б, В)
	// оптимизированый код
	Если А > Б И А > В Тогда 
		Возврат А;
	ИначеЕсли Б > В Тогда 
		Возврат Б;
	Иначе 
		Возврат В;
	КонецЕсли;

КонецФункции

12 урок  Циклы в 1С

Новая внешняя обработка "РаботаСЦиклами"
Создаем форму - готово

//Самый простой цикл

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Счетчик = 1; 
	Пока Счетчик <= 10 Цикл

		Сообщить(Счетчик);
		Счетчик = Счетчик + 1;

	КонецЦикла;

КонецПроцедуры

	Счетчик = 1; 
	Пока Счетчик <= 10 Цикл
		// если счетчик доходит до 7, программа вызодит из цикла
		Если Счетчик = 7 Тогда // 7ку пропускаем
			Счетчик = Счетчик + 1; // если не поставить счетчик, то программа зависнет на 7ке цикл
			Продолжить;
		КонецЕсли; 

		Сообщить(Счетчик);
		Счетчик = Счетчик + 1;

	КонецЦикла;

	еще цикл, который выводит число кроме двух

		Счетчик = 1; 
	Пока Счетчик <= 10 Цикл
		//выводит все цифры кроме 3 и 7
		Если Счетчик = 3 или Счетчик = 7 Тогда 
		Счетчик = Счетчик + 1;
			Продолжить;
		КонецЕсли; 

		Сообщить(Счетчик);
		Счетчик = Счетчик + 1;

	КонецЦикла;


Есть еще один вариант цикла 

Для Счетчик = 1 По 10 Цикл

	Сообщить(Счетчик);

КонецЦикла;

13 урок Цикл Для Каждого 

Этот цикл используется чаще всего 

	
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	М = Новый Массив();
	М.Добавить(1);
	М.Добавить(5);
	М.Добавить(15);
	М.Добавить(7);

	Сообщить("Вывод элементов массива");
	Для Каждого ЭлементаМассива Из М Цикл
		Сообщить(ЭлементаМассива);
	КонецЦикла;
КонецПроцедуры

14 урок Обход коллекции в 1С тремя способами

// Это если используем цикл Вывод Массива Для Каждого

Процедура ВыводМассиваДляКаждого(Массив)
	Для Каждого ЭлементаМассива Из М Цикл
		Сообщить(ЭлементаМассива);
	КонецЦикла;
КонецПроцедуры

// Для Цикла Пока 
Процедура ВыводМассиваПока(Массив)

Индекс = 0;
Количество = Массив.Количество();
Пока Индекс < Количество Цикл
	Сообщить(Массив(Индекс));
	Индекс = Индекс +1;
КонецЦикла

КонецПроцедуры

Процедура ВыводМассиваДля(Массив)

Количество = Массив.Количество();
Для Индекс = 0 По Количество - 1 Цикл 
	Сообщить(Массив(Индекс));
КонецЦикла

КонецПроцедуры


Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	М = Новый Массив();
	М.Добавить(1);
	М.Добавить(5);
	М.Добавить(15);
	М.Добавить(7);

	ВыводМассиваДляКаждого(М);

	ВыводМассиваПока(М);

	ВыводМассиваДля(М);
	// ответы одинакаовы у процедур
КонецПроцедуры

15 Урок Работа с массиврм в 1С, считаем сумму элементов Массива


Все так же пишем код в обработчике событий - форма - кнопка выполнить
Конфигурация - Обычное приложение

Функция СоздатьМассив(КоличествоЭлементов)
	М = Новый Массив;
	Генератор = Новый ГенераторСлучайныхЧисел;
	Для Индекс = 1 по КоличествоЭлементов Цикл
		СлучЧисло = ГенераторСлучайныхЧисел(1, 10);
		М.Добавить(СлучЧисло);
	КонецЦикла;
	Возврат М
КонецФункции

Процедура ВывестиМассив(Массив)
	
	Сообщить("Массив:");
	Для Каждого Элемент Из Массив Цикл
		Сообщить(Элемент);
	КонецЦикла
	Сообщить(" "); // это нужно что бы отделать один вывод массива от другого

КонецПроцедуры

Функция СуммаМассива(Массив)

	Сумма = 0;
	Для Каждого Элемент из Массив Цикл
		Сумма = Сумма + Элемент;
	КонецЦикла;

	Возврат Сумма;

КонецФункции

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	М = СоздатьМассив(5);
	ВывестиМассив(М);
	Сумма = СуммаМассива(М);
	Сообщить("Сумма массива = " + Сумма)
КонецПроцедуры

16 Урок Минимум и Максимум элементов Массива 1С

Ищем среднее значение массива

Функция СреднееЗначениеМассива(Массив)

	Сумма = 0; Количество = 0;
	Для Каждого Элемент из Массив Цикл

		Сумма = Сумма + Элемент;
		Количество = Количество + 1;

	КонецЦикла;

	Если Количество > 0 Тогда
		Возврат Сумма / Количество;
	Иначе
		Возврат Неопределено;
	КонецЕсли

КонецФункции

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	М = СоздатьМассив(5);
	ВывестиМассив(М);
	Сообщить("СреднееЗначениеМассива = " + СреднееЗначениеМассива(М));
КонецПроцедуры


####### Способ 2  №
// Переделываю функцию которая считает среднее значение массива

Функция СреднееЗначениеМассива(Массив)

	Количество = Массив.Количество();

	Если Количество > 0 Тогда
		Возврат СуммаМассива(Массив) / Количество;
	Иначе
		Возврат Неопределено;
	КонецЕсли

КонецФункции

 Следующая задача - поиск минимум и максимум значения элемента массива

 Функция МаксимумМассива(Массив) // Минимум делается по аналогии, меняется только один знак и названия переменых

 	Если Массив.Количество() = 0  Тогда  // если массив пустой, то мы ничего не делаем
 		Возврат Неопределено;
 	КонецЕсли;

 	Максимум = Массив[0];	 // можно сделать Максимум = 0, но так мы более оптимизировали код
 	Для Каждого Элемент из Массив Цикл 

 		Если Элемент > Максимум Тогда 
 			Максимум = Элемент;
 		КонецЕсли;
 	КонецЦикла;
 	Возврат Максимум;
 КонецФункции


17 Урок  Отладчик 

мне надо пересмотреть что бы законспектировать 

18 Урок 
Работаем в обычном приложении
Справочники - создает Справочник "Сотрудники" и реквизит "ДатаРождения" - дата
в Нумерации ставит Автонумерация и Контроль уникальности

Формы Создаем новую форму и пусть она создастся в автоматическом режиме с стандартными для справочника реквизитами

Создаем справочник "Должности" и так же создаем ей форму
Создаем справочник "Подразделение" Иерархия групп и элементов и создаем форму

Запускаем программу

Замечаем одну интересную делать, открываем форму в справочнике Сотрудники и закрываем, но код увеличивается
надо это исправить

Справочники Сотрудники - Формы свойства - Автонумерация - Не использовать - так делаем всем справочникам
Теперь код будет присваиваться в момент записи объекта, а не в момент создании формы 
Так же в справочниках - Данные делаем длину наименования 100
Создаем трех сотрудников 
Показывает как работает Иерархия, выбираем Иерархия элементов
Создаем Производство и два цеха в Подразделениях и подчинаем Цеха Производству 

19 урок. Документы в 1С 

Создаем документ ПриемНаРаботу 
Создаем реквизит
 Сотрудник - справочник сотрудник, 
 Должность - справочник должность, 
 Подразделение - Справочник Подразделение
Создаем форму документа, позволяем форме создаться автоматически и попраляем ее
решаем проблему с номером, который автоматически увеличивается 

Заполняем первого человека Безденежных Максим - Директор - Администрация

Выбор режима проведения
Оперативное проведение - это проведение текущего времени
неоперативное проведение дату не изменяет
что бы постояно не выбирать какое проведение будем использовать следует 
Зайти в документ - Движение - Оперативное проведение - Запретить 
Так делается в большинстве типовых конфигураций 

Выясняем что делает документ при проведение, Есть обработка проведения
В Модуль объекта прописывается действие документа при проведении 
Сделаем свои действия при проведении

В документе при проведении должны произойти измненения в регистрах сведения, но пока мы не Знаем что такое 
регистры сведения, так что на следующем уроке

20 Урок Регистры сведений 1С

Создаем Регистр сведений "КадровыеПеремещения"
Периодичность - В пределах дня
Режим Записи - Подчинение Регистратору

Все записи должны быть уникальными, Период и сотрудник делают документ уникальными
так как нельзя в одну секунду провести одного сотрудника несколько раз

Измерения - Сотрудник - Справочник Сотрудники
Ресурсы - Должность Справочник..., Подразделение Справочник...

Регистраторы - отмечаем галкой документ Прием на работу  

Теперь необходимо что бы проведя документ - заполнялся Регистр сведений

Открываем форму Документа ПриемНаРаботу 
Движение - Конструктор Движений и выполня сопоставление благодаря кнопки Заполнить выражения

И теперь код в модуле объекта документа стал таким 

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// регистр КадровыеПеремещения
	Движения.КадровыеПеремещения.Записывать = Истина; // Система автоматически записывает движения после обработки проведения
	Движения.КадровыеПеремещения.Очистить();
	Движение = Движения.КадровыеПеремещения.Добавить();
	Движение.Период = Дата;
	Движение.Сотрудник = Сотрудник;
	Движение.Должность = Должность;
	Движение.Подразделение = Подразделение;

КонецПроцедуры

Проверяем код. При записи документа запись попадает в регистр сведений 

Урок 21  Перечисление в 1С и в чем необходимость изучать запросы 
Пробуем уволить сотрудника, так же повысить или перевести

ПриемНаРаботу 
Реквизит Оклад - число, добавляем на форму 

КадровыеПеремещения - реестр - Оклад - Число

Добавляем в модуль побъекта
Движение.Оклад = Оклад;

Проверили проведение оклада
Теперь планируем провести кадровые перемещения сотрудника по Должности

Копируем документ ПриемНаРаботу и меняем имя на "КадровоеПеремещение"

Создаем новый объект Перечисления - "ПричинаИзмененияСостояний"
Данные - Добавить Значения перечисления "ПриемНаРаботу", "Перемещения", "Увольнения"

Добавляем в Регистры сведения КадровыеПеремещения Ресурсы - "ПричинаИзмененияСостояния" тип Перечисление.ПричиныИзмененияСостояния

Код в модуле объекта

ПриемНа работу добавляем
Движение.ПричинаИзмененияСостояния = Перечисления.ПричинаИзмененияСостояний.ПриемНаРаботу
КадровыеПеремещения добавляем 
Движение.ПричинаИзмененияСостояния = Перечисления.ПричинаИзмененияСостояний.Перемещения;

Создаем документ "Увольнения"
В форме отключаем доступность у Должность, Подразделение и Оклад
Добавляем код в модуль объекта
Движение.ПричинаИзмененияСостояния = Перечисления.ПричинаИзмененияСостояний.Увольнение;


Теперь своего сотрудника мы перемещаем и увольняем 

Но ошибка в том, что одного сотрудника мы можем сколько угодно раз принимать на работу 
как и увольнять одного сотрудника бесконечно раз 
или можем уволить сотрудника, которого мы не принимали на работу 

Надо навесить кучу доп проверок на наш проект  и это будет делаться на следующем уроке 
Все это плавное проведение к тому зачем нам нужен будет язык запросов 
Это будет нашей целью для изучения языка запросов
а пока изучим основы языка запросов

Урок 22 Консоль запросов 
качаем консоль запросов 8.1 и распаковываем, так как у нас обычное приложение 
https://www.youtube.com/redirect?event=comments&redir_token=QUFFLUhqa182SlRWc2pmUThoU0VaU2dUZ3EyQjRUb2JuUXxBQ3Jtc0trbG9lUmVMaHZhSlNQQ3o3bDhiSlNYQU9zQW1aaGs5ZG5RSVByVmhOcW9CNFdSSVZIdGlUUEZNVUlsT09LUS1hTkE5TlBhZ2NZRV93OUhtVGlCR3MyQ2w3UWRnTXlRd21vbm9md2kyM0tQSEUtRGcyWQ&q=http%3A%2F%2Fprogrammist1s.ru%2Fwp-content%2Fuploads%2F2013%2F05%2FKonsolZaprosovUniversalnaya_programmist1S.ru_-1.zip&stzid=UgizRqqMWeZfC3gCoAEC

Урок 23 Язык запросов 1С 8.3: ИЗ, ГДЕ, УПОРЯДОЧИТЬ

ВЫБРАТЬ *
Из Справочник.Сотрудники // высветится вся таблица из справочника сотрудники

ВЫБРАТЬ Ссылка, Наименование, ДатаРождения // выбрали три столбца
Из Справочник.Сотрудники
ГДЕ ДатаРождения >= ДАТАВРЕМЯ(1980, 1, 1) // добавляем условие, где отображаются сотрудники не старше 80х
И ПометкаУдаление = Ложь // делаем так что те кто удален не отображались
УПОРЯДОЧИТЬ ПО 
Наименованию, ДатаРождения УБЫВ // выполняет сортировку по дате рождения 

Урок 24 СГРУППИРОВАТЬ, ИМЕЮЩИЕ

  
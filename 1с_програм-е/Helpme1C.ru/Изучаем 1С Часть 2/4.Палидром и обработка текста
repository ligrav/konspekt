Палидром и обработка текста 

			УПРАЖНЕНИЕ  7Б

		Пользователь вводит слово, программа должна проверить, является ли слово палидромом и вывести результат

		По факту я решил задачу не прибегая к циклам, теперь надо подумать как это сделать с циклом


СловоОтПользователя = "";
ВвестиСтроку(СловоОтПользователя); 
// я вот что думаю, надо каждую букву заложить в свой массив

Если Лев(СловоОтПользователя, СтрДлина(СловоОтПользователя)) = Прав(СловоОтПользователя, СтрДлина(СловоОтПользователя))  Тогда      

	ОткрытьЗначение(" Символы являются палиндром")
КонецЕсли


		А вот так эта задача решается при помощи цикла
			Мое решение совпало с эталонным

СловоОтПользователя = "";
ВвестиСтроку(СловоОтПользователя); 

НачалоСлова = 1;
КонецСлова = СтрДлина(СловоОтПользователя); 
ЭтоПолидром = Истина;

Пока НачалоСлова < КонецСлова Цикл 	
	
	Если Сред(СловоОтПользователя, НачалоСлова, 1) <> Сред(СловоОтПользователя, КонецСлова, 1) Тогда
		
		ЭтоПолидром = Ложь;
		Прервать;		
		
	КонецЕсли;
	
	НачалоСлова = НачалоСлова + 1;
	КонецСлова = КонецСлова - 1;
КонецЦикла;

Если  ЭтоПолидром = Истина Тогда
	ОткрытьЗначение("Слово " + СловоОтПользователя + " полидром");    
Иначе  
	 ОткрытьЗначение("Слово " + СловоОтПользователя + " НЕ полидром");
КонецЕсли;


		УПРАЖНЕНИЕ №8 

	Решаю задачу, котоая подсчитывает слова, пробелы и знаки препинания в предложении

	Да я тут решала


СловоОтПользователя = "";
ВвестиСтроку(СловоОтПользователя); 

КоличествоСлов = 1;
КоличествоЗапятых = 0;
КоличествоПробелов = 0;

Для НачалоСлова = 0 По СтрДлина(СловоОтПользователя) Цикл 	

Если Сред(СловоОтПользователя, НачалоСлова, 1) = " " Тогда
	
	КоличествоСлов = КоличествоСлов + 1;
	КоличествоПробелов = КоличествоПробелов + 1;
ИначеЕсли Сред(СловоОтПользователя, НачалоСлова, 1) = "," Тогда

	КоличествоЗапятых = КоличествоЗапятых + 1;
	
КонецЕсли;

КонецЦикла;


ОткрытьЗначение("В предложение " + СловоОтПользователя + 
			  " Количество Слов = " + КоличествоСлов + 
			   ", Количество Запятых = " + КоличествоЗапятых + 
				", Количество Пробелов = " + КоличествоПробелов);	


				Я решил задачу опираясь только на запятые
				А тут похоже надо искать все знаки препинания


			Моё новое решение, не совсем идеальное, но верное

СловоОтПользователя = ""; 
ВвестиСтроку(СловоОтПользователя);

ЗнакиПрепинания = "`!@#$%^&*[]""{}<>.,";  // Все знаки препинания которые могут встретиться в тексте

КоличествоСлов = 1;
КоличествоЗнаковПрепинаний = 0;
КоличествоПробелов = 0;

Для НачалоСлова = 0 По СтрДлина(СловоОтПользователя) Цикл 	

	Если Сред(СловоОтПользователя, НачалоСлова, 1) = " " Тогда
		
		КоличествоСлов = КоличествоСлов + 1;
		КоличествоПробелов = КоличествоПробелов + 1;
	КонецЕсли;
		// АВТОР СДЕЛАЛ ПРОВЕРКУ ПО ЗНАКАМ ПРЕПИНАНИЯ БОЛЕЕ ЭЛЕГАНТНО ЧЕРЕЗ СтрНайти , У МЕНЯ ПРИМЕР ЧУТЬ БОЛЕЕ УСЛОЖНЕН
	Для Элемент = 0 По  СтрДлина(ЗнакиПрепинания) Цикл   // Прходим проверку каждой буквы в предложении на знак препинания 
		Если Сред(СловоОтПользователя, НачалоСлова, 1) = Сред(ЗнакиПрепинания, Элемент, 1) Тогда
			КоличествоЗнаковПрепинаний = КоличествоЗнаковПрепинаний + 1;	
		КонецЕсли;  
	КонецЦикла;
КонецЦикла;
	
	
ОткрытьЗначение("В предложение " + СловоОтПользователя + 
				  " Количество Слов = " + КоличествоСлов + 
				   ", Количество Знаков Препинаний = " + КоличествоЗнаковПрепинаний + 
					", Количество Пробелов = " + КоличествоПробелов);	
	
	
	
	
	
	
Пока я ввел решение, что при вводе пользователя текста, каждое слово уходит в определенный массив
	Решил я эту задачу за два часа без подсказок

Текст = "";
ВвестиСтроку(Текст); 


ЗнакиПрепинания = "`!@#$%^&*[]""{}<>.,"; 
МассивСлов = Новый Массив;
Слово = "";
МыВСлове = Ложь; 
БылиПерестановки = Ложь;

Для А = 1 По СтрДлина(Текст) Цикл
	
	Символ = Сред(Текст, А, 1);
	
	Если Символ = " " Или СтрНайти(ЗнакиПрепинания, Символ) > 0 Тогда
		
		Если МыВСлове = Истина Тогда		
			МассивСлов.Добавить(Слово);
		КонецЕсли;
		
		МыВСлове = Ложь;
		Слово = "";
		Иначе  
		МыВСлове = Истина;
		Слово = Слово + Сред(Текст, А, 1); 
	КонецЕсли;
КонецЦикла;
// Условие ниже проверяет как раз последнее слово
Если МыВСлове = Истина Тогда 
	МассивСлов.Добавить(Слово);
КонецЕсли;    
СтрокаВыводаОригинал = "";
Для каждого Элемент Из МассивСлов Цикл 
	СтрокаВыводаОригинал = СтрокаВыводаОригинал + " " + Элемент;
КонецЦикла; 
Пока Истина Цикл  
	БылиПерестановки = Ложь; 
	Для Элемент = 0 По МассивСлов.ВГраница() - 1 Цикл  
		Слово1 = МассивСлов[Элемент]; 
		Слово2 = МассивСлов[Элемент + 1];
		Если СтрДлина(Слово1) >  СтрДлина(Слово2) Тогда
			Стакан = МассивСлов[Элемент]; 
			МассивСлов[Элемент] = МассивСлов[Элемент + 1];
			МассивСлов[Элемент + 1] = Стакан; 
			
			БылиПерестановки = Истина;
		КонецЕсли;
	КонецЦикла;

	Если БылиПерестановки = Ложь Тогда;
		Прервать;
	КонецЕсли;
КонецЦикла;

СтрокаВывода = "";
Для каждого Элемент Из МассивСлов Цикл 
	СтрокаВывода = СтрокаВывода + " " + Элемент;
КонецЦикла; 
ОткрытьЗначение("Текст от пользователя - " + СтрокаВыводаОригинал + "  " 
				 + " Переделанный вариант - " + СтрокаВывода);